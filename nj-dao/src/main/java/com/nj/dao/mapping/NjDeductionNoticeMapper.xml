<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.NjDeductionNoticeMapper">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjDeductionNotice">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="source_order_no" jdbcType="VARCHAR" property="sourceOrderNo" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="plan_repay_date" jdbcType="DATE" property="planRepayDate" />
    <result column="plan_repay_total_amt" jdbcType="DECIMAL" property="planRepayTotalAmt" />
    <result column="acc_repay_total_amt" jdbcType="DECIMAL" property="accRepayTotalAmt" />
    <result column="deduction_date" jdbcType="TIMESTAMP" property="deductionDate" />
    <result column="is_notice" jdbcType="BIT" property="isNotice" />
    <result column="diduction_status" jdbcType="TINYINT" property="diductionStatus" />
    <result column="fail_reasion" jdbcType="VARCHAR" property="failReasion" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="true_name" jdbcType="VARCHAR" property="trueName" />
    <result column="bank_num" jdbcType="VARCHAR" property="bankNum" />
    <result column="deduction_amt" jdbcType="DECIMAL" property="deductionAmt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, source_order_no, period, plan_repay_date, plan_repay_total_amt, acc_repay_total_amt, 
    deduction_date, is_notice, diduction_status, fail_reasion, create_date, true_name, 
    bank_num, deduction_amt
  </sql>
  <select id="selectByExample" parameterType="com.nj.model.generate.NjDeductionNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nj_deduction_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nj_deduction_notice
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from nj_deduction_notice
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nj.model.generate.NjDeductionNoticeExample">
    delete from nj_deduction_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nj.model.generate.NjDeductionNotice">
    insert into nj_deduction_notice (id, order_no, source_order_no, 
      period, plan_repay_date, plan_repay_total_amt, 
      acc_repay_total_amt, deduction_date, is_notice, 
      diduction_status, fail_reasion, create_date, 
      true_name, bank_num, deduction_amt
      )
    values (#{id,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{sourceOrderNo,jdbcType=VARCHAR}, 
      #{period,jdbcType=INTEGER}, #{planRepayDate,jdbcType=DATE}, #{planRepayTotalAmt,jdbcType=DECIMAL}, 
      #{accRepayTotalAmt,jdbcType=DECIMAL}, #{deductionDate,jdbcType=TIMESTAMP}, #{isNotice,jdbcType=BIT}, 
      #{diductionStatus,jdbcType=TINYINT}, #{failReasion,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{trueName,jdbcType=VARCHAR}, #{bankNum,jdbcType=VARCHAR}, #{deductionAmt,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nj.model.generate.NjDeductionNotice">
    insert into nj_deduction_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="sourceOrderNo != null">
        source_order_no,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="planRepayDate != null">
        plan_repay_date,
      </if>
      <if test="planRepayTotalAmt != null">
        plan_repay_total_amt,
      </if>
      <if test="accRepayTotalAmt != null">
        acc_repay_total_amt,
      </if>
      <if test="deductionDate != null">
        deduction_date,
      </if>
      <if test="isNotice != null">
        is_notice,
      </if>
      <if test="diductionStatus != null">
        diduction_status,
      </if>
      <if test="failReasion != null">
        fail_reasion,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="trueName != null">
        true_name,
      </if>
      <if test="bankNum != null">
        bank_num,
      </if>
      <if test="deductionAmt != null">
        deduction_amt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceOrderNo != null">
        #{sourceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="planRepayDate != null">
        #{planRepayDate,jdbcType=DATE},
      </if>
      <if test="planRepayTotalAmt != null">
        #{planRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="accRepayTotalAmt != null">
        #{accRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="deductionDate != null">
        #{deductionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isNotice != null">
        #{isNotice,jdbcType=BIT},
      </if>
      <if test="diductionStatus != null">
        #{diductionStatus,jdbcType=TINYINT},
      </if>
      <if test="failReasion != null">
        #{failReasion,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="trueName != null">
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null">
        #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="deductionAmt != null">
        #{deductionAmt,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nj.model.generate.NjDeductionNoticeExample" resultType="java.lang.Long">
    select count(*) from nj_deduction_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nj_deduction_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceOrderNo != null">
        source_order_no = #{record.sourceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.planRepayDate != null">
        plan_repay_date = #{record.planRepayDate,jdbcType=DATE},
      </if>
      <if test="record.planRepayTotalAmt != null">
        plan_repay_total_amt = #{record.planRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.accRepayTotalAmt != null">
        acc_repay_total_amt = #{record.accRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.deductionDate != null">
        deduction_date = #{record.deductionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isNotice != null">
        is_notice = #{record.isNotice,jdbcType=BIT},
      </if>
      <if test="record.diductionStatus != null">
        diduction_status = #{record.diductionStatus,jdbcType=TINYINT},
      </if>
      <if test="record.failReasion != null">
        fail_reasion = #{record.failReasion,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trueName != null">
        true_name = #{record.trueName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNum != null">
        bank_num = #{record.bankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.deductionAmt != null">
        deduction_amt = #{record.deductionAmt,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nj_deduction_notice
    set id = #{record.id,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      source_order_no = #{record.sourceOrderNo,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=INTEGER},
      plan_repay_date = #{record.planRepayDate,jdbcType=DATE},
      plan_repay_total_amt = #{record.planRepayTotalAmt,jdbcType=DECIMAL},
      acc_repay_total_amt = #{record.accRepayTotalAmt,jdbcType=DECIMAL},
      deduction_date = #{record.deductionDate,jdbcType=TIMESTAMP},
      is_notice = #{record.isNotice,jdbcType=BIT},
      diduction_status = #{record.diductionStatus,jdbcType=TINYINT},
      fail_reasion = #{record.failReasion,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      true_name = #{record.trueName,jdbcType=VARCHAR},
      bank_num = #{record.bankNum,jdbcType=VARCHAR},
      deduction_amt = #{record.deductionAmt,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nj.model.generate.NjDeductionNotice">
    update nj_deduction_notice
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceOrderNo != null">
        source_order_no = #{sourceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="planRepayDate != null">
        plan_repay_date = #{planRepayDate,jdbcType=DATE},
      </if>
      <if test="planRepayTotalAmt != null">
        plan_repay_total_amt = #{planRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="accRepayTotalAmt != null">
        acc_repay_total_amt = #{accRepayTotalAmt,jdbcType=DECIMAL},
      </if>
      <if test="deductionDate != null">
        deduction_date = #{deductionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isNotice != null">
        is_notice = #{isNotice,jdbcType=BIT},
      </if>
      <if test="diductionStatus != null">
        diduction_status = #{diductionStatus,jdbcType=TINYINT},
      </if>
      <if test="failReasion != null">
        fail_reasion = #{failReasion,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="trueName != null">
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null">
        bank_num = #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="deductionAmt != null">
        deduction_amt = #{deductionAmt,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nj.model.generate.NjDeductionNotice">
    update nj_deduction_notice
    set order_no = #{orderNo,jdbcType=VARCHAR},
      source_order_no = #{sourceOrderNo,jdbcType=VARCHAR},
      period = #{period,jdbcType=INTEGER},
      plan_repay_date = #{planRepayDate,jdbcType=DATE},
      plan_repay_total_amt = #{planRepayTotalAmt,jdbcType=DECIMAL},
      acc_repay_total_amt = #{accRepayTotalAmt,jdbcType=DECIMAL},
      deduction_date = #{deductionDate,jdbcType=TIMESTAMP},
      is_notice = #{isNotice,jdbcType=BIT},
      diduction_status = #{diductionStatus,jdbcType=TINYINT},
      fail_reasion = #{failReasion,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      true_name = #{trueName,jdbcType=VARCHAR},
      bank_num = #{bankNum,jdbcType=VARCHAR},
      deduction_amt = #{deductionAmt,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>