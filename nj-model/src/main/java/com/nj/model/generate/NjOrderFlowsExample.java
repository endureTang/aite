package com.nj.model.generate;

import java.util.ArrayList;
import java.util.List;

public class NjOrderFlowsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public NjOrderFlowsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessIsNull() {
			addCriterion("current_process is null");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessIsNotNull() {
			addCriterion("current_process is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessEqualTo(String value) {
			addCriterion("current_process =", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessNotEqualTo(String value) {
			addCriterion("current_process <>", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessGreaterThan(String value) {
			addCriterion("current_process >", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessGreaterThanOrEqualTo(String value) {
			addCriterion("current_process >=", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessLessThan(String value) {
			addCriterion("current_process <", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessLessThanOrEqualTo(String value) {
			addCriterion("current_process <=", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessLike(String value) {
			addCriterion("current_process like", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessNotLike(String value) {
			addCriterion("current_process not like", value, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessIn(List<String> values) {
			addCriterion("current_process in", values, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessNotIn(List<String> values) {
			addCriterion("current_process not in", values, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessBetween(String value1, String value2) {
			addCriterion("current_process between", value1, value2, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentProcessNotBetween(String value1, String value2) {
			addCriterion("current_process not between", value1, value2, "currentProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessIsNull() {
			addCriterion("current_app_process is null");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessIsNotNull() {
			addCriterion("current_app_process is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessEqualTo(String value) {
			addCriterion("current_app_process =", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessNotEqualTo(String value) {
			addCriterion("current_app_process <>", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessGreaterThan(String value) {
			addCriterion("current_app_process >", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessGreaterThanOrEqualTo(String value) {
			addCriterion("current_app_process >=", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessLessThan(String value) {
			addCriterion("current_app_process <", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessLessThanOrEqualTo(String value) {
			addCriterion("current_app_process <=", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessLike(String value) {
			addCriterion("current_app_process like", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessNotLike(String value) {
			addCriterion("current_app_process not like", value, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessIn(List<String> values) {
			addCriterion("current_app_process in", values, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessNotIn(List<String> values) {
			addCriterion("current_app_process not in", values, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessBetween(String value1, String value2) {
			addCriterion("current_app_process between", value1, value2, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentAppProcessNotBetween(String value1, String value2) {
			addCriterion("current_app_process not between", value1, value2, "currentAppProcess");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateIsNull() {
			addCriterion("current_order_state is null");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateIsNotNull() {
			addCriterion("current_order_state is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateEqualTo(Integer value) {
			addCriterion("current_order_state =", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateNotEqualTo(Integer value) {
			addCriterion("current_order_state <>", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateGreaterThan(Integer value) {
			addCriterion("current_order_state >", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateGreaterThanOrEqualTo(Integer value) {
			addCriterion("current_order_state >=", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateLessThan(Integer value) {
			addCriterion("current_order_state <", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateLessThanOrEqualTo(Integer value) {
			addCriterion("current_order_state <=", value, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateIn(List<Integer> values) {
			addCriterion("current_order_state in", values, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateNotIn(List<Integer> values) {
			addCriterion("current_order_state not in", values, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateBetween(Integer value1, Integer value2) {
			addCriterion("current_order_state between", value1, value2, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderStateNotBetween(Integer value1, Integer value2) {
			addCriterion("current_order_state not between", value1, value2, "currentOrderState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateIsNull() {
			addCriterion("current_order_display_state is null");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateIsNotNull() {
			addCriterion("current_order_display_state is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateEqualTo(String value) {
			addCriterion("current_order_display_state =", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateNotEqualTo(String value) {
			addCriterion("current_order_display_state <>", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateGreaterThan(String value) {
			addCriterion("current_order_display_state >", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateGreaterThanOrEqualTo(String value) {
			addCriterion("current_order_display_state >=", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateLessThan(String value) {
			addCriterion("current_order_display_state <", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateLessThanOrEqualTo(String value) {
			addCriterion("current_order_display_state <=", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateLike(String value) {
			addCriterion("current_order_display_state like", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateNotLike(String value) {
			addCriterion("current_order_display_state not like", value, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateIn(List<String> values) {
			addCriterion("current_order_display_state in", values, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateNotIn(List<String> values) {
			addCriterion("current_order_display_state not in", values, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateBetween(String value1, String value2) {
			addCriterion("current_order_display_state between", value1, value2, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andCurrentOrderDisplayStateNotBetween(String value1, String value2) {
			addCriterion("current_order_display_state not between", value1, value2, "currentOrderDisplayState");
			return (Criteria) this;
		}

		public Criteria andProcessTypeIsNull() {
			addCriterion("process_type is null");
			return (Criteria) this;
		}

		public Criteria andProcessTypeIsNotNull() {
			addCriterion("process_type is not null");
			return (Criteria) this;
		}

		public Criteria andProcessTypeEqualTo(String value) {
			addCriterion("process_type =", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeNotEqualTo(String value) {
			addCriterion("process_type <>", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeGreaterThan(String value) {
			addCriterion("process_type >", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeGreaterThanOrEqualTo(String value) {
			addCriterion("process_type >=", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeLessThan(String value) {
			addCriterion("process_type <", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeLessThanOrEqualTo(String value) {
			addCriterion("process_type <=", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeLike(String value) {
			addCriterion("process_type like", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeNotLike(String value) {
			addCriterion("process_type not like", value, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeIn(List<String> values) {
			addCriterion("process_type in", values, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeNotIn(List<String> values) {
			addCriterion("process_type not in", values, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeBetween(String value1, String value2) {
			addCriterion("process_type between", value1, value2, "processType");
			return (Criteria) this;
		}

		public Criteria andProcessTypeNotBetween(String value1, String value2) {
			addCriterion("process_type not between", value1, value2, "processType");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("remark is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("remark is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("remark like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("remark not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("remark in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("remark not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("remark between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("remark not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNull() {
			addCriterion("category is null");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNotNull() {
			addCriterion("category is not null");
			return (Criteria) this;
		}

		public Criteria andCategoryEqualTo(Integer value) {
			addCriterion("category =", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotEqualTo(Integer value) {
			addCriterion("category <>", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThan(Integer value) {
			addCriterion("category >", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThanOrEqualTo(Integer value) {
			addCriterion("category >=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThan(Integer value) {
			addCriterion("category <", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThanOrEqualTo(Integer value) {
			addCriterion("category <=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryIn(List<Integer> values) {
			addCriterion("category in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotIn(List<Integer> values) {
			addCriterion("category not in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryBetween(Integer value1, Integer value2) {
			addCriterion("category between", value1, value2, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotBetween(Integer value1, Integer value2) {
			addCriterion("category not between", value1, value2, "category");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table nj_order_flows
	 * @mbg.generated  Mon Aug 14 16:15:55 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nj_order_flows
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 22 09:18:06 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}