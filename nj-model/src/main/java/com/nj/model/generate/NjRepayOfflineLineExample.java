package com.nj.model.generate;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class NjRepayOfflineLineExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public NjRepayOfflineLineExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdIsNull() {
            addCriterion("offline_repay_id is null");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdIsNotNull() {
            addCriterion("offline_repay_id is not null");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdEqualTo(String value) {
            addCriterion("offline_repay_id =", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdNotEqualTo(String value) {
            addCriterion("offline_repay_id <>", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdGreaterThan(String value) {
            addCriterion("offline_repay_id >", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdGreaterThanOrEqualTo(String value) {
            addCriterion("offline_repay_id >=", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdLessThan(String value) {
            addCriterion("offline_repay_id <", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdLessThanOrEqualTo(String value) {
            addCriterion("offline_repay_id <=", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdLike(String value) {
            addCriterion("offline_repay_id like", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdNotLike(String value) {
            addCriterion("offline_repay_id not like", value, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdIn(List<String> values) {
            addCriterion("offline_repay_id in", values, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdNotIn(List<String> values) {
            addCriterion("offline_repay_id not in", values, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdBetween(String value1, String value2) {
            addCriterion("offline_repay_id between", value1, value2, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andOfflineRepayIdNotBetween(String value1, String value2) {
            addCriterion("offline_repay_id not between", value1, value2, "offlineRepayId");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayIsNull() {
            addCriterion("plan_repay_day is null");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayIsNotNull() {
            addCriterion("plan_repay_day is not null");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayEqualTo(Date value) {
            addCriterionForJDBCDate("plan_repay_day =", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayNotEqualTo(Date value) {
            addCriterionForJDBCDate("plan_repay_day <>", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayGreaterThan(Date value) {
            addCriterionForJDBCDate("plan_repay_day >", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("plan_repay_day >=", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayLessThan(Date value) {
            addCriterionForJDBCDate("plan_repay_day <", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("plan_repay_day <=", value, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayIn(List<Date> values) {
            addCriterionForJDBCDate("plan_repay_day in", values, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayNotIn(List<Date> values) {
            addCriterionForJDBCDate("plan_repay_day not in", values, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("plan_repay_day between", value1, value2, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andPlanRepayDayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("plan_repay_day not between", value1, value2, "planRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayIsNull() {
            addCriterion("actual_repay_day is null");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayIsNotNull() {
            addCriterion("actual_repay_day is not null");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayEqualTo(Date value) {
            addCriterionForJDBCDate("actual_repay_day =", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayNotEqualTo(Date value) {
            addCriterionForJDBCDate("actual_repay_day <>", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayGreaterThan(Date value) {
            addCriterionForJDBCDate("actual_repay_day >", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actual_repay_day >=", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayLessThan(Date value) {
            addCriterionForJDBCDate("actual_repay_day <", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("actual_repay_day <=", value, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayIn(List<Date> values) {
            addCriterionForJDBCDate("actual_repay_day in", values, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayNotIn(List<Date> values) {
            addCriterionForJDBCDate("actual_repay_day not in", values, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actual_repay_day between", value1, value2, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andActualRepayDayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("actual_repay_day not between", value1, value2, "actualRepayDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayIsNull() {
            addCriterion("overdue_day is null");
            return (Criteria) this;
        }

        public Criteria andOverdueDayIsNotNull() {
            addCriterion("overdue_day is not null");
            return (Criteria) this;
        }

        public Criteria andOverdueDayEqualTo(Integer value) {
            addCriterion("overdue_day =", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayNotEqualTo(Integer value) {
            addCriterion("overdue_day <>", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayGreaterThan(Integer value) {
            addCriterion("overdue_day >", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("overdue_day >=", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayLessThan(Integer value) {
            addCriterion("overdue_day <", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayLessThanOrEqualTo(Integer value) {
            addCriterion("overdue_day <=", value, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayIn(List<Integer> values) {
            addCriterion("overdue_day in", values, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayNotIn(List<Integer> values) {
            addCriterion("overdue_day not in", values, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayBetween(Integer value1, Integer value2) {
            addCriterion("overdue_day between", value1, value2, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andOverdueDayNotBetween(Integer value1, Integer value2) {
            addCriterion("overdue_day not between", value1, value2, "overdueDay");
            return (Criteria) this;
        }

        public Criteria andTotalAmountIsNull() {
            addCriterion("total_amount is null");
            return (Criteria) this;
        }

        public Criteria andTotalAmountIsNotNull() {
            addCriterion("total_amount is not null");
            return (Criteria) this;
        }

        public Criteria andTotalAmountEqualTo(BigDecimal value) {
            addCriterion("total_amount =", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountNotEqualTo(BigDecimal value) {
            addCriterion("total_amount <>", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountGreaterThan(BigDecimal value) {
            addCriterion("total_amount >", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_amount >=", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountLessThan(BigDecimal value) {
            addCriterion("total_amount <", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_amount <=", value, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountIn(List<BigDecimal> values) {
            addCriterion("total_amount in", values, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountNotIn(List<BigDecimal> values) {
            addCriterion("total_amount not in", values, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_amount between", value1, value2, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andTotalAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_amount not between", value1, value2, "totalAmount");
            return (Criteria) this;
        }

        public Criteria andPrincipalIsNull() {
            addCriterion("principal is null");
            return (Criteria) this;
        }

        public Criteria andPrincipalIsNotNull() {
            addCriterion("principal is not null");
            return (Criteria) this;
        }

        public Criteria andPrincipalEqualTo(BigDecimal value) {
            addCriterion("principal =", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalNotEqualTo(BigDecimal value) {
            addCriterion("principal <>", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalGreaterThan(BigDecimal value) {
            addCriterion("principal >", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("principal >=", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalLessThan(BigDecimal value) {
            addCriterion("principal <", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("principal <=", value, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalIn(List<BigDecimal> values) {
            addCriterion("principal in", values, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalNotIn(List<BigDecimal> values) {
            addCriterion("principal not in", values, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("principal between", value1, value2, "principal");
            return (Criteria) this;
        }

        public Criteria andPrincipalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("principal not between", value1, value2, "principal");
            return (Criteria) this;
        }

        public Criteria andInterestIsNull() {
            addCriterion("interest is null");
            return (Criteria) this;
        }

        public Criteria andInterestIsNotNull() {
            addCriterion("interest is not null");
            return (Criteria) this;
        }

        public Criteria andInterestEqualTo(BigDecimal value) {
            addCriterion("interest =", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestNotEqualTo(BigDecimal value) {
            addCriterion("interest <>", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestGreaterThan(BigDecimal value) {
            addCriterion("interest >", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("interest >=", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestLessThan(BigDecimal value) {
            addCriterion("interest <", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestLessThanOrEqualTo(BigDecimal value) {
            addCriterion("interest <=", value, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestIn(List<BigDecimal> values) {
            addCriterion("interest in", values, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestNotIn(List<BigDecimal> values) {
            addCriterion("interest not in", values, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest between", value1, value2, "interest");
            return (Criteria) this;
        }

        public Criteria andInterestNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("interest not between", value1, value2, "interest");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andRepayTypeIsNull() {
            addCriterion("repay_type is null");
            return (Criteria) this;
        }

        public Criteria andRepayTypeIsNotNull() {
            addCriterion("repay_type is not null");
            return (Criteria) this;
        }

        public Criteria andRepayTypeEqualTo(Integer value) {
            addCriterion("repay_type =", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeNotEqualTo(Integer value) {
            addCriterion("repay_type <>", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeGreaterThan(Integer value) {
            addCriterion("repay_type >", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("repay_type >=", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeLessThan(Integer value) {
            addCriterion("repay_type <", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeLessThanOrEqualTo(Integer value) {
            addCriterion("repay_type <=", value, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeIn(List<Integer> values) {
            addCriterion("repay_type in", values, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeNotIn(List<Integer> values) {
            addCriterion("repay_type not in", values, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeBetween(Integer value1, Integer value2) {
            addCriterion("repay_type between", value1, value2, "repayType");
            return (Criteria) this;
        }

        public Criteria andRepayTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("repay_type not between", value1, value2, "repayType");
            return (Criteria) this;
        }

        public Criteria andActualPeopleIsNull() {
            addCriterion("actual_people is null");
            return (Criteria) this;
        }

        public Criteria andActualPeopleIsNotNull() {
            addCriterion("actual_people is not null");
            return (Criteria) this;
        }

        public Criteria andActualPeopleEqualTo(String value) {
            addCriterion("actual_people =", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleNotEqualTo(String value) {
            addCriterion("actual_people <>", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleGreaterThan(String value) {
            addCriterion("actual_people >", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleGreaterThanOrEqualTo(String value) {
            addCriterion("actual_people >=", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleLessThan(String value) {
            addCriterion("actual_people <", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleLessThanOrEqualTo(String value) {
            addCriterion("actual_people <=", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleLike(String value) {
            addCriterion("actual_people like", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleNotLike(String value) {
            addCriterion("actual_people not like", value, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleIn(List<String> values) {
            addCriterion("actual_people in", values, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleNotIn(List<String> values) {
            addCriterion("actual_people not in", values, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleBetween(String value1, String value2) {
            addCriterion("actual_people between", value1, value2, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andActualPeopleNotBetween(String value1, String value2) {
            addCriterion("actual_people not between", value1, value2, "actualPeople");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 06 15:12:38 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nj_repay_offline_line
     *
     * @mbggenerated Mon Nov 06 15:12:38 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}