<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
						
	<context:annotation-config />
	<context:component-scan base-package="com.nj.core.base" /> 
	<context:component-scan base-package="com.nj.service" />
	<bean id="appConfigService" class="com.nj.service.common.AppConfigService">
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>
	<bean id="propertyConfigurer"
		class="com.nj.core.base.spring.ConfigPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- <value>/WEB-INF/classes/dbconfig.properties</value> -->
				<value>/WEB-INF/classes/application.properties</value>
			</list>
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- <property name="cacheSeconds" value="-1"/> -->
		<property name="cacheSeconds" value="5" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="basenames">
			<list>
				<value>classpath:messages/message</value>
			</list>
		</property>
	</bean>

	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<!-- <property name="url" value="jdbc:mysql://10.248.140.226:3306/nj-server?useUnicode=true&amp;characterEncoding=utf8" /> -->
		<property name="url" value="jdbc:mysql://10.248.140.201:3306/nj_server?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="ms" />
		<property name="password" value="123456" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="filters" value="stat" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="20" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="1" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="10" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxOpenPreparedStatements" value="20" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
	</bean>

	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath*:com/nj/dao/**/*Mapper*.xml"></property><!-- mapper扫描 -->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ================ Shiro start ================ -->
	<!-- rememberMe管理器 -->
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" />
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="604800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
		<property name="cacheManager" ref="memoryConstrainedCacheManager" />
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
		<!-- <property name="rememberMeManager" ref="rememberMeManager"/> -->
	</bean>

	<!--Realm -->
	<bean id="ShiroRealm" class="com.nj.admin.interceptor.shiro.ShiroRealm"></bean>

	<!-- rights -->
	<bean id="gvrts" class="com.nj.admin.filter.shiro.RightsFilter"></bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/" />
		<property name="successUrl" value="/main" />
		<property name="unauthorizedUrl" value="/login_toLogin" />
		<property name="filters">
			<map>
				<entry key="gvrts" value-ref="gvrts" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/common/** = anon
				/code = anon
				/login_login = anon
				/auth = anon
				/logout = anon
				/sys/index = anon
				/user/unauthorized = anon
				/token/uploadToken = anon
				/** = gvrts
			</value>
		</property>
	</bean>
	<!-- ================ Shiro end ================ -->
</beans>
