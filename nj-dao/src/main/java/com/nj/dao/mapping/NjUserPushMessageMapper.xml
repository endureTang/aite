<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.NjUserPushMessageMapper">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjUserPushMessage">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="push_id" jdbcType="VARCHAR" property="pushId" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="push_name" jdbcType="VARCHAR" property="pushName" />
    <result column="receive_name" jdbcType="VARCHAR" property="receiveName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="push_date" jdbcType="TIMESTAMP" property="pushDate" />
    <result column="read_date" jdbcType="TIMESTAMP" property="readDate" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, push_id, receive_id, push_name, receive_name, title, content, push_date, read_date, 
    is_read, del_flag, type
  </sql>
  <select id="selectByExample" parameterType="com.nj.model.generate.NjUserPushMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nj_user_push_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nj_user_push_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from nj_user_push_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nj.model.generate.NjUserPushMessageExample">
    delete from nj_user_push_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nj.model.generate.NjUserPushMessage">
    insert into nj_user_push_message (id, push_id, receive_id, 
      push_name, receive_name, title, 
      content, push_date, read_date, 
      is_read, del_flag, type
      )
    values (#{id,jdbcType=VARCHAR}, #{pushId,jdbcType=VARCHAR}, #{receiveId,jdbcType=VARCHAR}, 
      #{pushName,jdbcType=VARCHAR}, #{receiveName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{pushDate,jdbcType=TIMESTAMP}, #{readDate,jdbcType=TIMESTAMP}, 
      #{isRead,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nj.model.generate.NjUserPushMessage">
    insert into nj_user_push_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pushId != null">
        push_id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="pushName != null">
        push_name,
      </if>
      <if test="receiveName != null">
        receive_name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="pushDate != null">
        push_date,
      </if>
      <if test="readDate != null">
        read_date,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pushId != null">
        #{pushId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="pushName != null">
        #{pushName,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null">
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="pushDate != null">
        #{pushDate,jdbcType=TIMESTAMP},
      </if>
      <if test="readDate != null">
        #{readDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nj.model.generate.NjUserPushMessageExample" resultType="java.lang.Long">
    select count(*) from nj_user_push_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nj_user_push_message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.pushId != null">
        push_id = #{record.pushId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.pushName != null">
        push_name = #{record.pushName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveName != null">
        receive_name = #{record.receiveName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.pushDate != null">
        push_date = #{record.pushDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readDate != null">
        read_date = #{record.readDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRead != null">
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nj_user_push_message
    set id = #{record.id,jdbcType=VARCHAR},
      push_id = #{record.pushId,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      push_name = #{record.pushName,jdbcType=VARCHAR},
      receive_name = #{record.receiveName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      push_date = #{record.pushDate,jdbcType=TIMESTAMP},
      read_date = #{record.readDate,jdbcType=TIMESTAMP},
      is_read = #{record.isRead,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nj.model.generate.NjUserPushMessage">
    update nj_user_push_message
    <set>
      <if test="pushId != null">
        push_id = #{pushId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="pushName != null">
        push_name = #{pushName,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null">
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="pushDate != null">
        push_date = #{pushDate,jdbcType=TIMESTAMP},
      </if>
      <if test="readDate != null">
        read_date = #{readDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nj.model.generate.NjUserPushMessage">
    update nj_user_push_message
    set push_id = #{pushId,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      push_name = #{pushName,jdbcType=VARCHAR},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      push_date = #{pushDate,jdbcType=TIMESTAMP},
      read_date = #{readDate,jdbcType=TIMESTAMP},
      is_read = #{isRead,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>