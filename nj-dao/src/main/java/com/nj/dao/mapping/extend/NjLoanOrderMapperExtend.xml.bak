<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.extend.NjLoanOrderMapperExtend">
	 <resultMap id="BaseResultMap" type="com.nj.model.generate.NjLoanOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 09 10:51:56 CST 2017.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="audit_amount" jdbcType="DECIMAL" property="auditAmount" />
    <result column="audit_period" jdbcType="INTEGER" property="auditPeriod" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="usage_id" jdbcType="VARCHAR" property="usageId" />
    <result column="usage_desc" jdbcType="VARCHAR" property="usageDesc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="relative_chan_id" jdbcType="VARCHAR" property="relativeChanId" />
    <result column="agent_id" jdbcType="VARCHAR" property="agentId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="audit_rating" jdbcType="DECIMAL" property="auditRating" />
  </resultMap>
  
   <resultMap id="NjOrderFlows" type="com.nj.model.generate.NjOrderFlows">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 23 12:39:42 CST 2017.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="current_process" jdbcType="VARCHAR" property="currentProcess" />
    <result column="current_app_process" jdbcType="VARCHAR" property="currentAppProcess" />
    <result column="current_order_state" jdbcType="INTEGER" property="currentOrderState" />
    <result column="current_order_display_state" jdbcType="VARCHAR" property="currentOrderDisplayState" />
    <result column="process_type" jdbcType="VARCHAR" property="processType" />
  </resultMap>
	<select id="getUserOrders" 
		resultType="java.util.HashMap">
		SELECT njlo.id AS orderId
			,njlo.order_no AS orderNo
			,njlo.amount AS applyAmount
			,njlo.period AS applyPeriod
			,njlo.create_date AS createDate
			,njlo.status AS status
			,njlo.audit_amount AS auditAmount
			,njlo.audit_period AS auditPeriod
			,njlo.audit_rating AS auditRate
			,njp.product_name AS productName
			,njp.id AS productId
			,njp.default_fee AS defaultRate
		FROM nj_loan_order njlo
		INNER JOIN nj_product njp ON njp.id = njlo.product_id
		WHERE njlo.user_id = #{accountId, jdbcType=VARCHAR}
    	order by createDate desc LIMIT #{start,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER} 
	</select>
	
	<select id="getOrderDetailMap" parameterType="java.lang.String"
		resultType="java.util.HashMap">
		SELECT njlo.id AS orderId
			,njlo.order_no AS orderCode
			,njlo.amount AS applyAmount
			,njlo.period AS applyPeriod
			,njlo.create_date AS createDate
			,njlo.audit_amount AS auditAmount
			,njlo.audit_period AS auditPeriod
			,njlo.audit_rating AS auditRate
			,njlo.ge_agcy_advice AS geAgcyAdvice
			,njlo.funds_use AS fundsUse
			,njlo.enterprise_case AS enterpriseCase
			,njlo.project_content AS projectContent
			,njlo.status AS status
			,case njlo.lend_method  when 'LEND_ONL' then '线上' 
				when 'LEND_OFF' then '线下' 
				else '未知' END AS lendMethod 
			,njp.id AS productId
			,njp.product_name AS productName
			,njp.product_code AS productCode
			,njp.repay_way AS repayType
			,njp.default_fee AS defaultRate
			,agent.id AS commissionerId
			,agent.NAME AS commissionerName
			,agent.channel_acct AS commissionerMobile
			,njlo.relative_chan_id AS subChannelId
			,njlo.channel_id AS channelId
			,sd1.label_text AS repayTypeText
		FROM nj_loan_order njlo
		INNER JOIN nj_product njp ON njlo.product_id = njp.id
		INNER JOIN sys_dict sd1 ON sd1.type='CPHKFS' AND sd1.value=njp.repay_way
		LEFT JOIN nj_channel_relative agent ON njlo.agent_id = agent.id
		WHERE njlo.id = #{orderId, jdbcType=VARCHAR}
	</select>
		
	<!-- 后台订单begin -->
	<!-- 过滤订单
	必填- 公司ID 
	-->
	
	<select id="getOrdsByStatus" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		SELECT distinct njlo.id AS orderId
			,njlo.order_no AS orderNo
			,njlo.amount
			,njlo.audit_amount as auditAmount
			,njlo.audit_period as auditPeriod
			,njlo.audit_rating as auditRating
			,njlo.ge_agcy_advice AS geAgcyAdvice
			,njlo.funds_use AS fundsUse
			,njlo.enterprise_case AS enterpriseCase
			,njlo.project_content AS projectContent
			,np.non_recu_fee as feePayment
			,njlo.`status` as `status`
			,njlo.user_id as userId
			,njau.user_id as openUserId
			,njlo.product_id as productId
			,np.repay_way as repayWay
			,np.open_product_id as openProductId
		FROM
		nj_loan_order njlo
		inner join nj_app_user  njau
		on 1= 1
		<if test="status != null">
			and njlo.`status` = #{status,jdbcType=VARCHAR}
		</if>
		<if test="lendMethod != null">
			and njlo.lend_method = #{lendMethod,jdbcType=VARCHAR}
		</if>
		and njlo.user_id = njau.id
		inner join nj_product np
		on np.id = njlo.product_id
	</select>
	
	<select id="selectOrdersListPage" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		SELECT distinct 
				njlo.id AS orderId
				,njlo.order_no AS orderNo
				,njlo.amount 
				,sd.label_text as period 
				,njlo.create_date AS createDate
				,njlo.status AS status
				,njp.id AS productId
				,njp.product_name AS productName
				,njp.product_code AS productCode
				,nof.current_order_display_state AS orderStatus
				,nof.current_process As currentProcess
				,ifnull(noul.old_status,0)
				,nof2.current_order_display_state as oldStatus
				,nau.mobile
				,nau.true_name as trueName
				,nau.identify_id as identifyId
		FROM nj_loan_order njlo
		INNER JOIN nj_product njp ON 1= 1 
		AND njp.id = njlo.product_id
		<if test="orderNo != null and orderNo != ''">
			and njlo.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		inner join nj_product_user npu
		on njp.id = npu.product_id
		and npu.user_id = #{userId,jdbcType=VARCHAR}
		<if test="coporateId != null">
			INNER JOIN nj_corp_prod ncp 
			on ncp.corporate_id = #{coporateId,jdbcType=VARCHAR}
			and ncp.product_id = njlo.product_id
		</if>
		inner join nj_app_user  nau
		on njlo.user_id = nau.id
		<if test="keyword != null and keyword != ''">
			 and
			 ( nau.true_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')
			 or nau.mobile like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')
			 or nau.identify_id like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')
			 )
		</if>
		inner join sys_dict sd 
		on njlo.period = sd.value and sd.type = 'CPDKKXQX'
		inner join nj_order_flows nof
		on nof.current_order_state = njlo.`status`
		left join nj_order_update_log noul
		on njlo.`status` = noul.update_status
		and njlo.order_no = noul.order_id
		and noul.id = (select id from nj_order_update_log where 
			order_id = njlo.order_no
			order by update_date desc limit 0,1
		)
		left join nj_order_flows nof2
		on ifnull(noul.old_status,1) = nof2.current_order_state
		order by njlo.create_date desc
	</select>
	
	<select id="getOrderDetailsByNo" parameterType="java.lang.String"
		resultType="java.util.HashMap">
		select distinct
			nlo.id,
			nlo.`status`,
			nlo.create_date as createDate,
			nlo.order_no as orderNo,
			nlo.user_id as userId,
			nlo.amount,
			nlo.period, 
			ifnull(nlo.lend_method,'LEND_ONL') as lendMethod,
			nlo.usage_id as usageId,
			nlo.usage_desc as usageDesc,
			nlo.audit_amount as auditAmount,
			nlo.audit_period as auditPeriod,
			nlo.audit_rating as auditRating
			,nlo.ge_agcy_advice AS geAgcyAdvice
			,nlo.funds_use AS fundsUse
			,nlo.enterprise_case AS enterpriseCase
			,nlo.project_content AS projectContent
			,np.product_name as productName,
			np.id as productId,
			nau.true_name as userName,
			nau.identify_id as identifyId,
			nau.mobile,
			ncr.`name` as channelName,
			nlo.relative_chan_id as relChanId,
			ncrp.`name` as commName,
			nlo.agent_id as agentId,
			ifnull(noul.old_status,1) as oldStatus,
			npc.channel_code as channelCode
		from nj_loan_order nlo
		inner join nj_product np
		on 1=1 
		<if test="orderNo != null">
			and nlo.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		and np.id = nlo.product_id
		inner join nj_app_user nau
		on nau.id = nlo.user_id
		left join nj_product_channel npc
		on npc.id = nlo.channel_id
		left join  nj_channel_relative ncr
		on nlo.relative_chan_id = ncr.id
		and ncr.account_type = 0
		left join nj_channel_relative ncrp
		on nlo.agent_id = ncrp.id
		and ncrp.account_type = 1
		left join nj_order_update_log noul
		on noul.update_status = nlo.status
		<if test="orderNo != null">
			and noul.order_id =  #{orderNo,jdbcType=VARCHAR}
		</if>
		and noul.id = (select id from nj_order_update_log where 
			order_id = nlo.order_no
			order by update_date desc limit 0,1
		)
	</select>
	
	<select id="getTradeInfo" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select 
		np.reckon_model as reckonModel,
		np.non_recu_fee_type as noRecuFeeType,
		np.non_recu_fee as noRecuFee,
		np.repay_way as repayWay,
		nfc.share_rate as shareRate,
		nf.fund_name as fundName,
		nlo.audit_rating as auditRating
		from nj_product np
		inner join 
		nj_loan_order nlo
		on np.id = nlo.product_id
		<if test="orderNo != null">
			and nlo.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="orderId != null">
			and nlo.id = #{orderId,jdbcType=VARCHAR}
		</if>
		left join nj_fund_conf nfc
		on nfc.product_id = np.id
		left join nj_fund nf
		on nfc.fund_id = nf.id
	</select>
	<!--后台订单end-->
	
	<select id="getMaxOrder" resultMap="BaseResultMap">
	SELECT *
	FROM nj_loan_order
	ORDER BY create_date DESC limit 0
		,1
	</select>
	
	
	<select id="getListByCoporate" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select o.id,p.product_name productName,o.order_no orderNo,u.true_name userName,o.amount,o.period,o.create_date createDate from nj_loan_order o LEFT JOIN nj_app_user u ON
		o.user_id = u.id LEFT JOIN nj_product p ON o.product_id = p.id
			LEFT JOIN nj_corp_prod ncp on o.product_id = ncp.product_id LEFT JOIN
				nj_coporate nc ON ncp.corporate_id = nc.id
			WHERE 1=1 
			<!-- and nc.id = #{coporateId} --> 
			<if test="info != null and info != ''">
				and (u.true_name like CONCAT('%',#{info},'%')
				or u.mobile like CONCAT('%',#{info},'%')
				or u.identify_id like CONCAT('%',#{info},'%'))
			</if>
			<if test="orderNo != null and orderNo != ''">
				and o.order_no = #{orderNo}
			</if>
	</select>
	
	<select id="getLoanInfoByOrderNo" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select o.id,p.product_name productName,o.order_no orderNo,u.true_name userName,o.amount,o.period,o.create_date createDate ,
			o.usage_desc usageDesc ,o.audit_amount auditAmount ,o.audit_period auditPeriod ,
			c.channel_name AS channelName,c1.channel_name AS channelName1,c2.channel_name AS channelName2,r.name as relativeChan,r1.name as agentName from nj_loan_order o 
			LEFT JOIN nj_app_user u ON o.user_id = u.id 
			LEFT JOIN nj_product p ON o.product_id = p.id
			LEFT JOIN nj_corp_prod ncp on o.product_id = ncp.product_id 
			LEFT JOIN nj_coporate nc ON ncp.corporate_id = nc.id
		
			LEFT JOIN nj_channel_relative r ON o.relative_chan_id = r.id 
			LEFT JOIN nj_channel_relative r1 ON o.agent_id = r1.id 
			LEFT JOIN nj_product_channel c ON o.channel_id =  c.id
			LEFT JOIN nj_product_channel c1 ON r.channel_id =  c1.id
			LEFT JOIN nj_product_channel c2 ON r1.channel_id =  c2.id
			
			WHERE o.order_no = #{orderNo}
	</select>
	
	<!-- 渠道逻辑更改后新接口 -->
	<select id="getNewRepayObjs" parameterType="java.util.Map"
		resultType="java.util.HashMap">
			select 
			npro.repay_role as repayRole, 
			npro.repay_order as repayOrder,
			sd.label_text labelText,
			case 
				WHEN npro.repay_role = 0 then nau.id
				WHEN npro.repay_role = 1 then  npc.id
				else ncr.id
			end as userId,
			case 
				WHEN npro.repay_role = 0 then nau.true_name
				WHEN npro.repay_role = 1 then  npc.channel_name
				else ncr.name
			end as userName,
			case 
				WHEN npro.repay_role = 0 then nau.mobile
				WHEN npro.repay_role = 1 then  npc.channel_acct
				else ncr.channel_acct
			end as mobile,
			case 
				WHEN npro.repay_role = 0 then nau.user_id
				WHEN npro.repay_role = 1 then  npc.channel_open_id
				else ncr.channel_open_id
			end as openUserId
		from nj_prod_repay_obj npro 
		inner join sys_dict sd
		on npro.repay_role = sd.value 
		<if test="type != null and type != ''">
			and sd.type = #{type,jdbcType=VARCHAR}
		</if>
		inner join nj_loan_order nlo 
		on 1= 1
		and nlo.product_id = npro.product_id
		<if test="orderNo != null and orderNo != ''">
			and nlo.order_no =	#{orderNo,jdbcType=VARCHAR}
		</if>
		left join nj_app_user nau
		on 1 = 1
		and nau.id = nlo.user_id
		left join nj_channel_relative ncr
		on nlo.relative_chan_id = ncr.id
		left join nj_product_channel npc 
		on nlo.channel_id = npc.id  
		order by npro.repay_order
	</select>
				
	<select id="getRepayObjs" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select 
			npro.repay_role as repayRole, 
			npro.repay_order as repayOrder,
			sd.label_text labelText,
			case WHEN npro.repay_role = 0 then nau.id
				else nui.id
				end as userId,
			case 
				WHEN npro.repay_role = 0 then nau.true_name
				else nui.user_name
			end as userName,
			case 
				WHEN npro.repay_role = 0 then nau.mobile
				else nui.user_mobile
			end as mobile,
			case 
				WHEN npro.repay_role = 0 then nau.user_id
				else nui.open_user_id
			end as openUserId
		from nj_prod_repay_obj npro 
		inner join sys_dict sd
		on npro.repay_role = sd.value 
		<if test="type != null and type != ''">
			and sd.type = #{type,jdbcType=VARCHAR}
		</if>
		inner join nj_loan_order nlo 
		on 1= 1
		and nlo.product_id = npro.product_id
		<if test="orderNo != null and orderNo != ''">
			and nlo.order_no =	#{orderNo,jdbcType=VARCHAR}
		</if>
		left join nj_app_user nau
		on 1 = 1
		and nau.id = nlo.user_id
		left join nj_user_info nui
		on 1 = 1
		and nui.id = nlo.agent_id or nui.id = nlo.relative_chan_id
		order by npro.repay_order
	</select>
	
	<select id="getNewPayee" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select 
				nppo.payee_role as repayRole, 
				nppo.peyee_type as payeeType,
				
			case 
				WHEN nppo.payee_role = 0 then nau.id
				WHEN nppo.payee_role = 1 then  npc.id
				else ncr.id
			end as userId,
			case 
				WHEN nppo.payee_role = 0 then nau.true_name
				WHEN nppo.payee_role = 1 then  npc.channel_name
				else ncr.name
			end as userName,
			case 
				WHEN nppo.payee_role = 0 then nau.mobile
				WHEN nppo.payee_role = 1 then  npc.channel_acct
				else ncr.channel_acct
			end as mobile,
			case 
				WHEN nppo.payee_role = 0 then nau.user_id
				WHEN nppo.payee_role = 1 then  npc.channel_open_id
				else ncr.channel_open_id
			end as openUserId

			from nj_prod_payee_obj nppo 
			inner join nj_loan_order nlo 
			on 1= 1
			and nlo.product_id = nppo.product_id
			<if test="orderNo != null and orderNo != ''">
				and nlo.order_no =	#{orderNo,jdbcType=VARCHAR}
			</if>
			left join nj_app_user nau
			on 1 = 1
			and nau.id = nlo.user_id
			left join nj_channel_relative ncr
			on nlo.relative_chan_id = ncr.id
			left join nj_product_channel npc 
			on nlo.channel_id = npc.id  
			order by nppo.payee_role
		</select>
		
	<select id="getPayee" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		select 
				nppo.payee_role as repayRole, 
				nppo.peyee_type as payeeType,
				case WHEN nppo.payee_role = 0 then nau.id
				else nui.id
				end as userId,
				case 
					WHEN nppo.payee_role = 0 then nau.true_name
					else nui.user_name
				end as userName,
				case 
					WHEN nppo.payee_role = 0 then nau.mobile
					else nui.user_mobile
				end as mobile,
				case 
					WHEN nppo.payee_role = 0 then nau.user_id
					else nui.open_user_id
				end as openUserId
			from nj_prod_payee_obj nppo 
			inner join nj_loan_order nlo 
			on 1= 1
			and nlo.product_id = nppo.product_id
			<if test="orderNo != null and orderNo != ''">
				and nlo.order_no =	#{orderNo,jdbcType=VARCHAR}
			</if>
			left join nj_app_user nau
			on 1 = 1
			and nau.id = nlo.user_id
			left join nj_user_info nui
			on 1 = 1
			and nui.id = nlo.agent_id or nui.id = nlo.relative_chan_id
			order by nppo.payee_role
		</select>
		
		<select id="getTradeConfig" parameterType="java.util.Map"
		resultType="java.util.HashMap">
		SELECT nf.fund_name as fundName,nf.fund_type as fundType,
			case 
				when nf.lend_type = 'P2P_SELF' then true
				else false
			end
			 as isSelfLend,
			case 
				when nf.lend_type = 'P2P_SELF' then '自有资金'
				else '其它资金'
			end
			as fundIn,
			nui.id as userId,
			nui.open_user_id as openUserId
			,sd.value,
			np.reckon_model as reckonModel,
			np.non_recu_fee_type as noRecuFeeType,
			np.non_recu_fee as noRecuFee,
			np.repay_way as repayWay
			from nj_fund_conf nfc
			inner join nj_fund nf
			on nfc.fund_id = nf.id
			<if test="productId != null and productId != ''">
				and nfc.product_id = #{productId,jdbcType=VARCHAR}
			</if>
			inner join nj_product np
			on np.id = nfc.product_id
			inner join nj_corp_prod ncp
			on ncp.product_id = nfc.product_id
			inner join nj_coporate_user ncu
			on ncu.coporate_id = ncp.corporate_id
			inner join nj_user_info nui
			on nui.id = ncu.user_id
			inner join sys_user_role sur
			on sur.user_id = nui.id
			and sur.role_id = 2
			left join sys_dict sd 
			on sd.type ='CPPTSXF'
		</select>
		
		<select id="getOrderFlowsGroup"
			resultMap="NjOrderFlows">
			select * 
			from nj_order_flows 
			group by current_app_process 
			order by current_order_state asc
		</select>
		
		<select id="getAuditFiles" parameterType="java.lang.String"
		resultType="java.util.HashMap">
			select
				nua.id as fileId,
				nua.file_tag as fileTag
			 from 
				nj_order_update_attachment noua
				inner join
				nj_user_attachment nua
			on  noua.attachment_id = nua.id
			and noua.order_id = #{orderNo,jdbcType=VARCHAR}
		</select>
</mapper>