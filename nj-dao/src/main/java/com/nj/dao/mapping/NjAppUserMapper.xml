<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.NjAppUserMapper">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjAppUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mial" jdbcType="VARCHAR" property="mial" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="true_name" jdbcType="VARCHAR" property="trueName" />
    <result column="identify_id" jdbcType="VARCHAR" property="identifyId" />
    <result column="defi_true_name" jdbcType="VARCHAR" property="defiTrueName" />
    <result column="defi_identify_id" jdbcType="VARCHAR" property="defiIdentifyId" />
    <result column="auth_token" jdbcType="VARCHAR" property="authToken" />
    <result column="last_login_device_os" jdbcType="VARCHAR" property="lastLoginDeviceOs" />
    <result column="last_login_device_id" jdbcType="VARCHAR" property="lastLoginDeviceId" />
    <result column="last_login_device_type" jdbcType="VARCHAR" property="lastLoginDeviceType" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="is_contact_sync" jdbcType="BIT" property="isContactSync" />
    <result column="last_contact_sync_date" jdbcType="TIMESTAMP" property="lastContactSyncDate" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="channel_user_id" jdbcType="VARCHAR" property="channelUserId" />
    <result column="fraud_type" jdbcType="INTEGER" property="fraudType" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, version, address, mial, mobile, nick_name, user_id, user_avatar, user_type, true_name, 
    identify_id, defi_true_name, defi_identify_id, auth_token, last_login_device_os, 
    last_login_device_id, last_login_device_type, last_login_date, is_contact_sync, last_contact_sync_date, 
    open_id, channel, channel_user_id, fraud_type, company_id
  </sql>
  <select id="selectByExample" parameterType="com.nj.model.generate.NjAppUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nj_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nj_app_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from nj_app_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nj.model.generate.NjAppUserExample">
    delete from nj_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nj.model.generate.NjAppUser">
    insert into nj_app_user (id, version, address, 
      mial, mobile, nick_name, 
      user_id, user_avatar, user_type, 
      true_name, identify_id, defi_true_name, 
      defi_identify_id, auth_token, last_login_device_os, 
      last_login_device_id, last_login_device_type, 
      last_login_date, is_contact_sync, last_contact_sync_date, 
      open_id, channel, channel_user_id, 
      fraud_type, company_id)
    values (#{id,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{mial,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, 
      #{trueName,jdbcType=VARCHAR}, #{identifyId,jdbcType=VARCHAR}, #{defiTrueName,jdbcType=VARCHAR}, 
      #{defiIdentifyId,jdbcType=VARCHAR}, #{authToken,jdbcType=VARCHAR}, #{lastLoginDeviceOs,jdbcType=VARCHAR}, 
      #{lastLoginDeviceId,jdbcType=VARCHAR}, #{lastLoginDeviceType,jdbcType=VARCHAR}, 
      #{lastLoginDate,jdbcType=TIMESTAMP}, #{isContactSync,jdbcType=BIT}, #{lastContactSyncDate,jdbcType=TIMESTAMP}, 
      #{openId,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{channelUserId,jdbcType=VARCHAR}, 
      #{fraudType,jdbcType=INTEGER}, #{companyId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nj.model.generate.NjAppUser">
    insert into nj_app_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mial != null">
        mial,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="trueName != null">
        true_name,
      </if>
      <if test="identifyId != null">
        identify_id,
      </if>
      <if test="defiTrueName != null">
        defi_true_name,
      </if>
      <if test="defiIdentifyId != null">
        defi_identify_id,
      </if>
      <if test="authToken != null">
        auth_token,
      </if>
      <if test="lastLoginDeviceOs != null">
        last_login_device_os,
      </if>
      <if test="lastLoginDeviceId != null">
        last_login_device_id,
      </if>
      <if test="lastLoginDeviceType != null">
        last_login_device_type,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="isContactSync != null">
        is_contact_sync,
      </if>
      <if test="lastContactSyncDate != null">
        last_contact_sync_date,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="channelUserId != null">
        channel_user_id,
      </if>
      <if test="fraudType != null">
        fraud_type,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mial != null">
        #{mial,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="trueName != null">
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="identifyId != null">
        #{identifyId,jdbcType=VARCHAR},
      </if>
      <if test="defiTrueName != null">
        #{defiTrueName,jdbcType=VARCHAR},
      </if>
      <if test="defiIdentifyId != null">
        #{defiIdentifyId,jdbcType=VARCHAR},
      </if>
      <if test="authToken != null">
        #{authToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceOs != null">
        #{lastLoginDeviceOs,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceId != null">
        #{lastLoginDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceType != null">
        #{lastLoginDeviceType,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isContactSync != null">
        #{isContactSync,jdbcType=BIT},
      </if>
      <if test="lastContactSyncDate != null">
        #{lastContactSyncDate,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="channelUserId != null">
        #{channelUserId,jdbcType=VARCHAR},
      </if>
      <if test="fraudType != null">
        #{fraudType,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nj.model.generate.NjAppUserExample" resultType="java.lang.Long">
    select count(*) from nj_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nj_app_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mial != null">
        mial = #{record.mial,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.trueName != null">
        true_name = #{record.trueName,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyId != null">
        identify_id = #{record.identifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.defiTrueName != null">
        defi_true_name = #{record.defiTrueName,jdbcType=VARCHAR},
      </if>
      <if test="record.defiIdentifyId != null">
        defi_identify_id = #{record.defiIdentifyId,jdbcType=VARCHAR},
      </if>
      <if test="record.authToken != null">
        auth_token = #{record.authToken,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDeviceOs != null">
        last_login_device_os = #{record.lastLoginDeviceOs,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDeviceId != null">
        last_login_device_id = #{record.lastLoginDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDeviceType != null">
        last_login_device_type = #{record.lastLoginDeviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDate != null">
        last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isContactSync != null">
        is_contact_sync = #{record.isContactSync,jdbcType=BIT},
      </if>
      <if test="record.lastContactSyncDate != null">
        last_contact_sync_date = #{record.lastContactSyncDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.channelUserId != null">
        channel_user_id = #{record.channelUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.fraudType != null">
        fraud_type = #{record.fraudType,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nj_app_user
    set id = #{record.id,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      mial = #{record.mial,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      true_name = #{record.trueName,jdbcType=VARCHAR},
      identify_id = #{record.identifyId,jdbcType=VARCHAR},
      defi_true_name = #{record.defiTrueName,jdbcType=VARCHAR},
      defi_identify_id = #{record.defiIdentifyId,jdbcType=VARCHAR},
      auth_token = #{record.authToken,jdbcType=VARCHAR},
      last_login_device_os = #{record.lastLoginDeviceOs,jdbcType=VARCHAR},
      last_login_device_id = #{record.lastLoginDeviceId,jdbcType=VARCHAR},
      last_login_device_type = #{record.lastLoginDeviceType,jdbcType=VARCHAR},
      last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      is_contact_sync = #{record.isContactSync,jdbcType=BIT},
      last_contact_sync_date = #{record.lastContactSyncDate,jdbcType=TIMESTAMP},
      open_id = #{record.openId,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=VARCHAR},
      channel_user_id = #{record.channelUserId,jdbcType=VARCHAR},
      fraud_type = #{record.fraudType,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nj.model.generate.NjAppUser">
    update nj_app_user
    <set>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mial != null">
        mial = #{mial,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="trueName != null">
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="identifyId != null">
        identify_id = #{identifyId,jdbcType=VARCHAR},
      </if>
      <if test="defiTrueName != null">
        defi_true_name = #{defiTrueName,jdbcType=VARCHAR},
      </if>
      <if test="defiIdentifyId != null">
        defi_identify_id = #{defiIdentifyId,jdbcType=VARCHAR},
      </if>
      <if test="authToken != null">
        auth_token = #{authToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceOs != null">
        last_login_device_os = #{lastLoginDeviceOs,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceId != null">
        last_login_device_id = #{lastLoginDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDeviceType != null">
        last_login_device_type = #{lastLoginDeviceType,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isContactSync != null">
        is_contact_sync = #{isContactSync,jdbcType=BIT},
      </if>
      <if test="lastContactSyncDate != null">
        last_contact_sync_date = #{lastContactSyncDate,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="channelUserId != null">
        channel_user_id = #{channelUserId,jdbcType=VARCHAR},
      </if>
      <if test="fraudType != null">
        fraud_type = #{fraudType,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nj.model.generate.NjAppUser">
    update nj_app_user
    set version = #{version,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      mial = #{mial,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      true_name = #{trueName,jdbcType=VARCHAR},
      identify_id = #{identifyId,jdbcType=VARCHAR},
      defi_true_name = #{defiTrueName,jdbcType=VARCHAR},
      defi_identify_id = #{defiIdentifyId,jdbcType=VARCHAR},
      auth_token = #{authToken,jdbcType=VARCHAR},
      last_login_device_os = #{lastLoginDeviceOs,jdbcType=VARCHAR},
      last_login_device_id = #{lastLoginDeviceId,jdbcType=VARCHAR},
      last_login_device_type = #{lastLoginDeviceType,jdbcType=VARCHAR},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      is_contact_sync = #{isContactSync,jdbcType=BIT},
      last_contact_sync_date = #{lastContactSyncDate,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      channel_user_id = #{channelUserId,jdbcType=VARCHAR},
      fraud_type = #{fraudType,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>