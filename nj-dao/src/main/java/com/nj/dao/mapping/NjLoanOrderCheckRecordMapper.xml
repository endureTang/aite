<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.NjLoanOrderCheckRecordMapper">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjLoanOrderCheckRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="check_user_id" jdbcType="VARCHAR" property="checkUserId" />
    <result column="check_date" jdbcType="TIMESTAMP" property="checkDate" />
    <result column="data_type" jdbcType="TINYINT" property="dataType" />
    <result column="abnormal" jdbcType="BIT" property="abnormal" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, check_user_id, check_date, data_type, abnormal, remark
  </sql>
  <select id="selectByExample" parameterType="com.nj.model.generate.NjLoanOrderCheckRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nj_loan_order_check_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nj_loan_order_check_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from nj_loan_order_check_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nj.model.generate.NjLoanOrderCheckRecordExample">
    delete from nj_loan_order_check_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nj.model.generate.NjLoanOrderCheckRecord">
    insert into nj_loan_order_check_record (id, order_id, check_user_id, 
      check_date, data_type, abnormal, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{checkUserId,jdbcType=VARCHAR}, 
      #{checkDate,jdbcType=TIMESTAMP}, #{dataType,jdbcType=TINYINT}, #{abnormal,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nj.model.generate.NjLoanOrderCheckRecord">
    insert into nj_loan_order_check_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="checkUserId != null">
        check_user_id,
      </if>
      <if test="checkDate != null">
        check_date,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="abnormal != null">
        abnormal,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=TINYINT},
      </if>
      <if test="abnormal != null">
        #{abnormal,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nj.model.generate.NjLoanOrderCheckRecordExample" resultType="java.lang.Long">
    select count(*) from nj_loan_order_check_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nj_loan_order_check_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUserId != null">
        check_user_id = #{record.checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null">
        check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=TINYINT},
      </if>
      <if test="record.abnormal != null">
        abnormal = #{record.abnormal,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nj_loan_order_check_record
    set id = #{record.id,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      check_user_id = #{record.checkUserId,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      data_type = #{record.dataType,jdbcType=TINYINT},
      abnormal = #{record.abnormal,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nj.model.generate.NjLoanOrderCheckRecord">
    update nj_loan_order_check_record
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null">
        check_user_id = #{checkUserId,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null">
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=TINYINT},
      </if>
      <if test="abnormal != null">
        abnormal = #{abnormal,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nj.model.generate.NjLoanOrderCheckRecord">
    update nj_loan_order_check_record
    set order_id = #{orderId,jdbcType=VARCHAR},
      check_user_id = #{checkUserId,jdbcType=VARCHAR},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      data_type = #{dataType,jdbcType=TINYINT},
      abnormal = #{abnormal,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>