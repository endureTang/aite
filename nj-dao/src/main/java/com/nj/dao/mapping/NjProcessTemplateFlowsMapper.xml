<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.NjProcessTemplateFlowsMapper">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjProcessTemplateFlows">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="template_id" jdbcType="VARCHAR" property="templateId" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="process_name" jdbcType="VARCHAR" property="processName" />
    <result column="exec_function" jdbcType="VARCHAR" property="execFunction" />
    <result column="precondition" jdbcType="SMALLINT" property="precondition" />
    <result column="exec_agree_status" jdbcType="INTEGER" property="execAgreeStatus" />
    <result column="exec_reject_status" jdbcType="INTEGER" property="execRejectStatus" />
    <result column="exec_refuse_status" jdbcType="INTEGER" property="execRefuseStatus" />
    <result column="exec_orders" jdbcType="INTEGER" property="execOrders" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, template_id, process_id, type, process_name, exec_function, precondition, exec_agree_status, 
    exec_reject_status, exec_refuse_status, exec_orders
  </sql>
  <select id="selectByExample" parameterType="com.nj.model.generate.NjProcessTemplateFlowsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nj_process_template_flows
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nj_process_template_flows
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nj_process_template_flows
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nj.model.generate.NjProcessTemplateFlowsExample">
    delete from nj_process_template_flows
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nj.model.generate.NjProcessTemplateFlows">
    insert into nj_process_template_flows (id, template_id, process_id, 
      type, process_name, exec_function, 
      precondition, exec_agree_status, exec_reject_status, 
      exec_refuse_status, exec_orders)
    values (#{id,jdbcType=BIGINT}, #{templateId,jdbcType=VARCHAR}, #{processId,jdbcType=INTEGER}, 
      #{type,jdbcType=SMALLINT}, #{processName,jdbcType=VARCHAR}, #{execFunction,jdbcType=VARCHAR}, 
      #{precondition,jdbcType=SMALLINT}, #{execAgreeStatus,jdbcType=INTEGER}, #{execRejectStatus,jdbcType=INTEGER}, 
      #{execRefuseStatus,jdbcType=INTEGER}, #{execOrders,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nj.model.generate.NjProcessTemplateFlows">
    insert into nj_process_template_flows
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="processName != null">
        process_name,
      </if>
      <if test="execFunction != null">
        exec_function,
      </if>
      <if test="precondition != null">
        precondition,
      </if>
      <if test="execAgreeStatus != null">
        exec_agree_status,
      </if>
      <if test="execRejectStatus != null">
        exec_reject_status,
      </if>
      <if test="execRefuseStatus != null">
        exec_refuse_status,
      </if>
      <if test="execOrders != null">
        exec_orders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="processName != null">
        #{processName,jdbcType=VARCHAR},
      </if>
      <if test="execFunction != null">
        #{execFunction,jdbcType=VARCHAR},
      </if>
      <if test="precondition != null">
        #{precondition,jdbcType=SMALLINT},
      </if>
      <if test="execAgreeStatus != null">
        #{execAgreeStatus,jdbcType=INTEGER},
      </if>
      <if test="execRejectStatus != null">
        #{execRejectStatus,jdbcType=INTEGER},
      </if>
      <if test="execRefuseStatus != null">
        #{execRefuseStatus,jdbcType=INTEGER},
      </if>
      <if test="execOrders != null">
        #{execOrders,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nj.model.generate.NjProcessTemplateFlowsExample" resultType="java.lang.Long">
    select count(*) from nj_process_template_flows
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nj_process_template_flows
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.templateId != null">
        template_id = #{record.templateId,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.processName != null">
        process_name = #{record.processName,jdbcType=VARCHAR},
      </if>
      <if test="record.execFunction != null">
        exec_function = #{record.execFunction,jdbcType=VARCHAR},
      </if>
      <if test="record.precondition != null">
        precondition = #{record.precondition,jdbcType=SMALLINT},
      </if>
      <if test="record.execAgreeStatus != null">
        exec_agree_status = #{record.execAgreeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.execRejectStatus != null">
        exec_reject_status = #{record.execRejectStatus,jdbcType=INTEGER},
      </if>
      <if test="record.execRefuseStatus != null">
        exec_refuse_status = #{record.execRefuseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.execOrders != null">
        exec_orders = #{record.execOrders,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nj_process_template_flows
    set id = #{record.id,jdbcType=BIGINT},
      template_id = #{record.templateId,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=SMALLINT},
      process_name = #{record.processName,jdbcType=VARCHAR},
      exec_function = #{record.execFunction,jdbcType=VARCHAR},
      precondition = #{record.precondition,jdbcType=SMALLINT},
      exec_agree_status = #{record.execAgreeStatus,jdbcType=INTEGER},
      exec_reject_status = #{record.execRejectStatus,jdbcType=INTEGER},
      exec_refuse_status = #{record.execRefuseStatus,jdbcType=INTEGER},
      exec_orders = #{record.execOrders,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nj.model.generate.NjProcessTemplateFlows">
    update nj_process_template_flows
    <set>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="processName != null">
        process_name = #{processName,jdbcType=VARCHAR},
      </if>
      <if test="execFunction != null">
        exec_function = #{execFunction,jdbcType=VARCHAR},
      </if>
      <if test="precondition != null">
        precondition = #{precondition,jdbcType=SMALLINT},
      </if>
      <if test="execAgreeStatus != null">
        exec_agree_status = #{execAgreeStatus,jdbcType=INTEGER},
      </if>
      <if test="execRejectStatus != null">
        exec_reject_status = #{execRejectStatus,jdbcType=INTEGER},
      </if>
      <if test="execRefuseStatus != null">
        exec_refuse_status = #{execRefuseStatus,jdbcType=INTEGER},
      </if>
      <if test="execOrders != null">
        exec_orders = #{execOrders,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nj.model.generate.NjProcessTemplateFlows">
    update nj_process_template_flows
    set template_id = #{templateId,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=INTEGER},
      type = #{type,jdbcType=SMALLINT},
      process_name = #{processName,jdbcType=VARCHAR},
      exec_function = #{execFunction,jdbcType=VARCHAR},
      precondition = #{precondition,jdbcType=SMALLINT},
      exec_agree_status = #{execAgreeStatus,jdbcType=INTEGER},
      exec_reject_status = #{execRejectStatus,jdbcType=INTEGER},
      exec_refuse_status = #{execRefuseStatus,jdbcType=INTEGER},
      exec_orders = #{execOrders,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>