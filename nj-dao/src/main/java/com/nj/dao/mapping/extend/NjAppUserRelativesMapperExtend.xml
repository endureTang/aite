<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nj.dao.extend.NjAppUserRelativesMapperExtend">
  <resultMap id="BaseResultMap" type="com.nj.model.generate.NjUserRelatives">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Feb 15 14:14:51 CST 2017.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="relative_mobile" jdbcType="VARCHAR" property="relativeMobile" />
    <result column="relative_name" jdbcType="VARCHAR" property="relativeName" />
    <result column="relative_type" jdbcType="VARCHAR" property="relativeType" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>

<!-- 张海添加，获取最近的联系人信息 -->
	<select id="getRecentRelatives" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT * FROM nj_user_relatives INNER JOIN
		(SELECT rels.user_id as user_id, max(version) as max_version FROM nj_user_relatives rels 
				WHERE rels.user_id=#{userId,jdbcType=VARCHAR} AND version >= 0 GROUP BY rels.user_id) tmp
		ON  nj_user_relatives.user_id= tmp.user_id AND nj_user_relatives.version=tmp.max_version
		AND nj_user_relatives.del_flag=0
	</select>
	
	<select id="getRelativeMapByMobile" parameterType="java.lang.String"
		resultType="com.nj.model.generate.NjUserRelatives">
		
		SELECT rels.relative_name 
			,rels.id 
			,rels.relative_mobile
			,rels.create_date
			,rels.relative_type
			,rels.sex
			,rels.relative_name
			,rels.province
			,rels.city
			,rels.county
			,rels.address
		FROM nj_user_relatives rels
		INNER JOIN (
		SELECT user.id AS userId
			,max(rels.version) AS version
			FROM nj_user_relatives rels
			INNER JOIN nj_app_user user ON rels.user_id = user.id
			WHERE user.mobile = #{mobileNo,jdbcType=VARCHAR} AND rels.version >= 0
			GROUP BY user.id
		) tmp ON rels.version = tmp.version
		AND rels.user_id = tmp.userId AND rels.del_flag=0 and rels.relative_type!="1"
		ORDER BY create_date DESC
	</select>
	<select id="getRelativesByOrder" parameterType="java.lang.String"
		resultType="com.nj.model.generate.NjUserRelatives">
		SELECT
			rels.relative_name,
			rels.id,
			rels.relative_mobile,
			rels.create_date,
			rels.relative_type,
			rels.sex,
			rels.address
		FROM
			nj_user_relatives rels
		INNER JOIN nj_order_relative ordr ON rels.id = ordr.relative_id
		WHERE
			ordr.order_id = #{orderId}
		order by create_date
	</select>
	
	<select id="getRecentRelsByMobile" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT *
		FROM nj_user_relatives rels
		INNER JOIN (
		SELECT user.id AS userId
			,max(rels.version) AS version
			FROM nj_user_relatives rels
			INNER JOIN nj_app_user user ON rels.user_id = user.id
			WHERE user.mobile = #{mobileNo,jdbcType=VARCHAR} AND rels.version >= 0
			GROUP BY user.id
		) tmp ON rels.version = tmp.version
		AND rels.user_id = tmp.userId
		AND rels.del_flag=0 and rels.relative_type!="1"
	</select>
	
	<select id="getMaxVersionByUserId" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT max(rels.version) 
		FROM nj_user_relatives rels
		WHERE rels.user_id=#{userId, jdbcType=VARCHAR} AND version >= 0
	</select>
	
	<!-- backend begin -->
	<select id="getRelativesByOrderId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select nur.*
		from nj_order_relative nor
			inner join nj_user_relatives nur
		on nor.order_id = #{orderId, jdbcType=VARCHAR}
		and nor.relative_id = nur.id
	</select>
	<!-- backend end -->
	
	
	<select id="getContactsByOrderNo" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select DISTINCT c.name as relative_name,c.phone_no as relative_mobile from nj_user_contact c 
		inner JOIN nj_loan_order o 
		on (c.user_id = o.user_id ) 
		where o.order_no = #{orderNo, jdbcType=VARCHAR}
	</select>
	
	<select id="getRelativesListByOrderId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select nur.id,nur.relative_name relativeName,nur.relative_mobile relativeMobile ,nur.relative_type relativeType,sd.label_text typeName,nur.sex,nur.address
		from nj_order_relative nor
		inner join nj_user_relatives nur on nor.relative_id = nur.id
		INNER JOIN sys_dict sd on sd.value=nur.relative_type and sd.type='QPGXLX'
		where nor.order_id = #{orderId}
	</select>
	<!-- 通过订单ID查询配偶信息 -->
	<select id="getRelativesSpouseByOrderId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select nur.id,nur.relative_name relativeName,nur.relative_mobile relativeMobile ,nur.relative_type relativeType,nur.sex,nur.nation,nur.age,nur.id_card_num idCardNum,nur.profession,nur.address,nur.org_name orgName  
		from nj_order_relative nor
		inner join nj_user_relatives nur on nor.relative_id = nur.id
		where nor.order_id = #{orderId} and nur.relative_type="1" ORDER BY nur.create_date DESC
	</select>
	<!-- 通过订单ID查询抵押房信息 -->
	<select id="getHousePawnByOrderId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select   
			t2.id,
			t2.user_id userId,
			t2.house_name houseName,
			t2.province,
			t2.city,
			t2.county,
			t2.address,
			t2.`owner`,
			t2.warrant_no warrantNo,
			t2.covered_area coveredArea,
			t2.record_date recordDate,
			t2.house_age houseAge,
			t2.fitment_status fitmentStatus,
			t2.is_only isOnly,
			t2.web_one_name webOneName,
			t2.web_one_price webOnePrice,
			t2.web_two_name webTwoName,
			t2.web_two_price webTwoPrice,
			t2.web_three_name webThreeName,
			t2.web_three_price webThreePrice,
			t2.company_name companyName,
			t2.company_price companyPrice,
			t2.cognizance_price cognizancePrice,
			t2.mortgage_no mortgageNo,
			t2.loan_balance loanBalance,
			t2.loan_quta loanQuta,
			t2.market_money marketMoney,
			t2.loan_money loanMoney,
			t2.loan_term loanTerm,
			t2.remarks,
			t2.create_time createTime,
			t2.pawn_status pawnStatus,
			t2.pawn_bank pawnBank,
			t2.pic_file_one picFileOne,
			t2.pic_file_two picFileTwo,
			t2.pic_file_three picFileThree,
			t2.pic_file_four picFileFour
		  from nj_order_pawn_house_link t1  left join nj_order_pawn_house t2 on t1.pawn_id=t2.id        
		where t1.order_id=#{orderId}
	</select>
	<!-- 通过订单ID查询房产信息 -->
	<select id="getHouseByOrderId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select   t2.id,t2.address,t2.buy_price as buyPrice  from  nj_order_house t1 left join  nj_user_house t2 on t1.house_id = t2.id where t1.order_id=#{orderId}
	</select>
	<!-- 通过订单ID查询负债信息 -->
	<select id="getDebtByOrderId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select  t2.id,t2.org_name as orgName,t2.loan_money as loanMoney,t2.warrant_way as warrantWay,t2.begin_time as beginTime,t2.end_time as endTime     
		from  nj_order_debt t1 left join nj_user_debt_info t2 on t1.debt_id = t2.id where t1.order_id=#{orderId} and t2.id is not null order by t2.create_time desc
	</select>
	<!-- 更新联系人和配偶信息 -->
	<update id="updateUserRelativeById" parameterType="com.nj.model.generate.NjUserRelatives">
		update nj_user_relatives 
		  <trim prefix="set" suffixOverrides=",">
		    <if test="relativeMobile != null">
		    	relative_mobile=#{relativeMobile,jdbcType=VARCHAR},
		    </if>
			<if test="relativeName != null">
				relative_name=#{relativeName,jdbcType=VARCHAR}, 
			</if>
			<if test="relativeType != null">
				relative_type=#{relativeType,jdbcType=VARCHAR}, 
			</if>
			<if test="sex != null">
				sex=#{sex,jdbcType=INTEGER}, 
			</if>
			<if test="nation != null">
				nation=#{nation,jdbcType=VARCHAR}, 
			</if>
			<if test="age != null">
				age=#{age,jdbcType=INTEGER}, 
			</if>
			<if test="idCardNum != null">
				id_card_num=#{idCardNum,jdbcType=VARCHAR}, 
			</if>
			<if test="profession != null">
				profession=#{profession,jdbcType=VARCHAR}, 
			</if>
			<if test="address != null">
				address=#{address,jdbcType=VARCHAR},
			</if>
		  </trim>
		where id=#{id}
	</update>
	<!-- 更新抵押物信息 -->
	<update id="updatePawnHouse" parameterType="com.nj.model.generate.NjOrderPawnHouse">
		update nj_order_pawn_house
			<trim prefix="set" suffixOverrides=",">
				<if test="province != null">
					province=#{province,jdbcType=VARCHAR},
				</if>
				<if test="city != null ">
					city=#{city,jdbcType=VARCHAR},
				</if>
				<if test="county != null ">
					county=#{county,jdbcType=VARCHAR},
				</if>
				<if test="address != null ">
					address=#{address,jdbcType=VARCHAR},
				</if>
				<if test="warrantNo != null ">
					warrant_no=#{warrantNo,jdbcType=VARCHAR},
				</if>
				<if test="owner != null ">
					owner=#{owner,jdbcType=VARCHAR},
				</if>
				<if test="coveredArea != null ">
					covered_area=#{coveredArea,jdbcType=VARCHAR},
				</if>
				<if test="houseName != null ">
					house_name=#{houseName,jdbcType=VARCHAR},
				</if>
				<if test="recordDate != null ">
					record_date=#{recordDate,jdbcType=DATE},
				</if>
				<if test="houseAge != null">
					house_age=#{houseAge,jdbcType=INTEGER},
				</if>
				<if test="fitmentStatus != null ">
					fitment_status=#{fitmentStatus,jdbcType=VARCHAR},
				</if>
				<if test="isOnly != null ">
					is_only=#{isOnly},
				</if>
				<if test="webOneName != null ">
					web_one_name=#{webOneName,jdbcType=VARCHAR},
				</if>
				<if test="webOnePrice != null ">
					web_one_price=#{webOnePrice,jdbcType=NUMERIC},
				</if>
				<if test="webTwoName != null ">
					web_two_name=#{webTwoName,jdbcType=VARCHAR},
				</if>
				<if test="webTwoPrice != null ">
					web_two_price=#{webTwoPrice,jdbcType=NUMERIC},
				</if>
				<if test="webThreeName != null ">
					web_three_name=#{webThreeName,jdbcType=VARCHAR},
				</if>
				<if test="webThreePrice != null ">
					web_three_price=#{webThreePrice,jdbcType=NUMERIC},
				</if>
				<if test="companyName != null ">
					company_name=#{companyName,jdbcType=VARCHAR},
				</if>
				<if test="companyPrice != null ">
					company_price=#{companyPrice,jdbcType=NUMERIC},
				</if>
				<if test="cognizancePrice != null ">
					cognizance_price=#{cognizancePrice,jdbcType=NUMERIC},
				</if>
				<if test="mortgageNo != null ">
					mortgage_no=#{mortgageNo,jdbcType=TINYINT},
				</if>
				<if test="loanBalance != null ">
					loan_balance=#{loanBalance,jdbcType=NUMERIC},
				</if>
				<if test="loanQuta != null ">
					loan_quta=#{loanQuta,jdbcType=NUMERIC},
				</if>
				<if test="marketMoney != null ">
					market_money=#{marketMoney,jdbcType=NUMERIC},
				</if>
				<if test="loanMoney != null ">
					loan_money=#{loanMoney,jdbcType=NUMERIC},
				</if>
				<if test="loanTerm != null ">
					loan_term=#{loanTerm,jdbcType=TINYINT},
				</if>
				<if test="remarks != null ">
					remarks=#{remarks,jdbcType=VARCHAR},
				</if>
				<if test="pawnStatus != null ">
					pawn_status=#{pawnStatus,jdbcType=VARCHAR},
				</if>
				<if test="pawnBank != null ">
					pawn_bank=#{pawnBank,jdbcType=VARCHAR},
				</if>
				<if test="picFileOne != null">
					 pic_file_one=#{picFileOne,jdbcType=VARCHAR},
				</if>
				<if test="picFileTwo != null">
					pic_file_Two=#{picFileTwo,jdbcType=VARCHAR},
				</if>
				<if test="picFileThree != null">
				    pic_file_Three=#{picFileThree,jdbcType=VARCHAR},
				</if>
				<if test="picFileThree !=null">
					pic_file_four=#{picFileFour,jdbcType=VARCHAR},
				</if>
			</trim>
		where id=#{id}
	</update>
	<!-- 更新房产信息 -->
	<update id="updateHouseInfo" parameterType="com.nj.model.generate.NjUserHouse">
	 	 update nj_user_house
	 	 <trim prefix="set" suffixOverrides=",">
	 	 	<if test="address != null">
					address=#{address,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
					name=#{name,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
					province=#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
					city=#{city,jdbcType=VARCHAR},
			</if>
			<if test="county != null">
					county=#{county,jdbcType=VARCHAR},
			</if>
	 	 </trim>
	 	 where id =#{id}	
	</update>
	<!-- 更新负债信息 -->
	<update id="updateDebtInfo" parameterType="com.nj.model.generate.NjUserDebtInfo">
		 update nj_user_debt_info
		 <trim prefix="set" suffixOverrides=",">
		 		<if test="orgName != null ">
					org_name=#{orgName,jdbcType=VARCHAR},
			</if>
			<if test="loanMoney != null ">
					loan_money=#{loanMoney,jdbcType=NUMERIC},
			</if>
			<if test="warrantWay != null ">
					warrant_way=#{warrantWay,jdbcType=VARCHAR},
			</if>
			<if test="beginTime != null ">
					begin_time=#{beginTime,jdbcType=DATE},
			</if>
			<if test="endTime != null ">
					end_time=#{endTime,jdbcType=DATE},
			</if>
		 </trim>
		 where id =#{id}
	</update>
	<!-- 根据订单ID删除绑定关系 -->
	<delete id="deleteByOrderId">
		DELETE FROM nj_order_relative WHERE order_id = #{orderId} 
	</delete>
	<!-- 根据订单ID删除联系人绑定关系 -->
	<delete id="deleteByOrderIdAndRelativeId">
		DELETE FROM nj_order_relative WHERE order_id = #{orderId}
	</delete>
	<!-- 根据订单ID删除基本信息绑定关系 -->
	<delete id="deleteBaseInfoByOrderId">
		DELETE FROM nj_order_userinfo WHERE order_id = #{orderId}
	</delete>
	<!-- 根据订单ID删除工作信息绑定关系 -->
	<delete id="deleteUserWorkByOrderId">
		DELETE FROM nj_order_work WHERE order_id = #{orderId}
	</delete>
	<!-- 根据订单ID删除车辆信息绑定关系 -->
	<delete id="deleteUserCarByOrderId">
		DELETE FROM nj_order_user_car WHERE order_id = #{orderId}
	</delete>
	
	<!-- 根据订单ID删除住房绑定关系 -->
	<delete id="deleteOrderHouseByOrderId">
		DELETE FROM nj_order_house WHERE order_id = #{orderId}
	</delete>
		<!-- 根据订单ID删除负债绑定关系 -->
	<delete id="deleteOrderDebtByOrderId">
		DELETE FROM nj_order_debt WHERE order_id = #{orderId}
	</delete>
	<!-- 根据订单ID删除抵押房绑定关系 -->
	<delete id="deleteOrderPawnHouseLinkByOrderId">
		DELETE FROM nj_order_pawn_house_link WHERE order_id = #{orderId}
	</delete>
	
	<!-- 获得用户负债信息 通过手机号码-->
	<select id="getUserDebtInfoByMobile" parameterType="java.lang.String" resultType="com.nj.model.generate.NjUserDebtInfo">
		select  t1.begin_time,t1.end_time,t1.id,t1.loan_money,t1.org_name,t1.warrant_way from nj_user_debt_info t1   INNER JOIN  
		(select  IFNULL(max(t2.version),0) version,t3.id from nj_user_debt_info t2  left join  nj_app_user t3 on  t2.user_id = t3.id where t3.mobile = #{mobile}) t4 on t1.version = t4.version and t1.user_id = t4.id and t1.del_flag=0
	</select>
	<!-- 获得用户负债信息Version最大值 -->
	<select id="getUserDebtInfoOfMaxVersion" parameterType="java.lang.String" resultType="int">
		select  IFNULL(max(t1.version),0) version from nj_user_debt_info t1   where t1.user_id = #{userId}
	</select>
	<!-- 获得用户房产信息 通过手机号码-->
	<select id="getUserHouseByMobile" parameterType="java.lang.String" resultType="com.nj.model.generate.NjUserHouse">
		select  t1.address,t1.buy_price,t1.city,t1.county,t1.id,t1.`name`,t1.province  from nj_user_house t1  INNER  JOIN   
	    (select  IFNULL(max(t2.version),0) version ,t3.id from nj_user_house t2  left join  nj_app_user t3 on  t2.user_id = t3.id where t3.mobile = #{mobile}) t4 on t1.version = t4.version and t1.user_id = t4.id and t1.del_flag=0	
	</select>
	<!-- 获得用户房产信息 Version最大值-->
	<select id="getUserHouseOfMaxVersion" parameterType="java.lang.String" resultType="int">
		select  IFNULL(max(t1.version),0) version from nj_user_house t1  where t1.user_id = #{userId}
	</select>
	<!-- 获得用户配偶 信息，通过手机号码和亲属关系，该功能可以根据type灵活查询-->
	<select id="getUserRelatives" parameterType="map" resultType="com.nj.model.generate.NjUserRelatives">
		select  t1.version,t1.address,t1.age,t1.city,t1.county,t1.id_card_num,t1.nation,t1.org_name,t1.profession,t1.province,t1.relative_mobile,t1.relative_name,t1.relative_type,t1.sex,t1.id  from nj_user_relatives t1  INNER JOIN   
 	(select  IFNULL(max(t2.version),0) version,t3.id from nj_user_relatives t2  left join  nj_app_user t3 on  t2.user_id = t3.id where t3.mobile = #{mobile}  and t2.relative_type=#{type}) t4 on t1.version = t4.version and t1.user_id = t4.id and t1.del_flag=0 and t1.relative_type=#{type}
	</select>
	<!-- 获得用户配偶 信息，通过用户ID和亲属关系，该功能可以根据type灵活查询-->
	<select id="getUserRelativesByUserId" parameterType="map" resultType="com.nj.model.generate.NjUserRelatives">
		select  t1.version,t1.address,t1.age,t1.city,t1.county,t1.id_card_num,t1.nation,t1.org_name,t1.profession,t1.province,t1.relative_mobile,t1.relative_name,t1.relative_type,t1.sex,t1.id  from nj_user_relatives t1  INNER JOIN   
 	(select  IFNULL(max(t2.version),0) version,t3.id from nj_user_relatives t2  left join  nj_app_user t3 on  t2.user_id = t3.id where t3.id = #{userId}  and t2.relative_type=#{type}) t4 on t1.version = t4.version and t1.user_id = t4.id and t1.del_flag=0 and t1.relative_type=#{type}
	</select>
	
	<!-- 获得用户配偶 信息，通过手机号码和亲属关系-->
	<select id="getUserRelativesMap" parameterType="map" resultType="map">
		SELECT
			t1.relative_name AS spouse_name,
			t1.sex AS spouse_sex,
			t1.nation AS spouse_ethnic,
			t1.age AS spouse_age,
			t1.id_card_num AS spouse_id_card_number,
			t1.relative_mobile AS spouse_mobile,
			t1.org_name AS spouse_career,
			t1.address AS spouse_address
		FROM
			nj_user_relatives t1
		INNER JOIN nj_order_relative t2 ON t1.id = t2.relative_id
		AND t1.del_flag = 0
		AND t1.relative_type =#{type}
		AND order_id = #{orderId}
		ORDER BY
			t1.create_date DESC
		LIMIT 1 
	</select>
	
	<!-- 获得用户配偶 信息，通过用户ID和亲属关系-->
	<select id="getUserRelativesOfMaxVersion" parameterType="map" resultType="int">
		select  IFNULL(max(t1.version),0) version from nj_user_relatives t1  where t1.user_id = #{userId}  and t1.relative_type=#{type}
	</select>
		<!-- 获得 抵押房信息，通过手机号码-->
	<select id="getOrderPawnHouseByMobile" parameterType="java.lang.String" resultType="com.nj.model.generate.NjOrderPawnHouse">
			select  t1.*  from nj_order_pawn_house t1  INNER JOIN    
 		(select  IFNULL(max(t2.version),0) version,t3.id from nj_order_pawn_house t2  left join  nj_app_user t3 on  t2.user_id = t3.id where t3.mobile = #{mobile}) t4 on t1.version = t4.version and t1.user_id = t4.id and t1.is_del=0

	</select>
	
		<!-- 获得 抵押房信息，通过订单号码-->
	<select id="getOrderPawnHouseModelByOrderId" parameterType="java.lang.String" resultType="com.nj.model.generate.NjOrderPawnHouse">
			select t.* from nj_order_pawn_house t  INNER JOIN  nj_order_pawn_house_link t1 on t.id=t1.pawn_id  where t1.order_id=#{orderId}  ORDER BY version desc LIMIT 1

	</select>
	
	<!-- 获得抵押房信息，通过手机号码和亲属关系-->
	<select id="getOrderPawnHouseOfMaxVersion" parameterType="java.lang.String" resultType="int">
		select  IFNULL(max(t1.version),0) version from nj_order_pawn_house t1  where t1.user_id = #{userId}  
	</select>
	
	<!-- 根据订单id获取用户抵押物信息 -->
	<select id="getOrderPawnHouseByOrderId" resultType="map">
		SELECT
			t2.address AS pawn_address,
			t2.warrant_no AS pawn_num,
			t2.`owner` AS pawn_owner,
			t2.covered_area AS pawn_area,
			t2.market_money AS pawn_price,
			t2.loan_money AS pawn_loan_amount,
			t2.loan_term AS pawn_loan_period,
			t2.county as country
		FROM
			nj_order_pawn_house_link t1
		LEFT JOIN nj_order_pawn_house t2 ON t1.pawn_id = t2.id
		WHERE
			t1.order_id = #{orderId} 
		ORDER BY create_time desc LIMIT 1
	</select>
	
	<!-- 根据订单id获取用户抵押物信息 -->
	<select id="getOrderDeptByOrderId" resultType="com.nj.model.generate.NjUserDebtInfo">
		SELECT
			t2.*
		FROM
			nj_order_debt t1
		LEFT JOIN nj_user_debt_info t2 ON t1.debt_id = t2.id
		WHERE
			t1.order_id =  #{orderId}
	</select>
	
	<select id="getUserRelativesList" resultType="com.nj.model.generate.NjUserRelatives">
		SELECT
			rels.relative_name,
			rels.id,
			rels.relative_mobile,
			rels.create_date,
			rels.relative_type,
			rels.sex,
			rels.address
		FROM
			nj_user_relatives rels
		INNER JOIN nj_order_relative ordr ON rels.id = ordr.relative_id
		WHERE
			ordr.order_id = #{orderId}
		AND rels.relative_type != #{dictValue}
		AND rels.version = #{maxVersion}
		ORDER BY
			create_date DESC LIMIT 2
	</select>
</mapper>